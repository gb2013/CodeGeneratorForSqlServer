using System;
using System.Collections.Generic;
using ${namespace}.Contract;
using ${namespace}.Model;
using ${namespace}.Dao;
using IBatisNet.Common;

namespace ${namespace}.Service
{
	public class ${table.Alias}Service : I${table.Alias}Service
	{
		#region 变量

		#endregion

		#region 属性
		/// <summary>
		/// ${table.Description}Dao
		/// </summary>
		public ${table.Alias}Dao ${table.Alias}Dao
		{
			get;
			set;
		}
		#endregion

		#region 事件

		#endregion

		#region 构造函数
		public ${table.Alias}Service()
		{
			${table.Alias}Dao = new ${table.Alias}Dao();
		}
		public ${table.Alias}Service(string reader,string writer)
        {
            ${table.Alias}Dao = new ${table.Alias}Dao(reader,writer);
        }
		#endregion

		#region 方法
		/// <summary>
		/// 获取$table.Description
		/// </summary>
		/// <param name="$key.CamelAlias">$key.Description</param>
		/// <returns>$table.Description</returns>
		public $table.Alias Get${table.Alias}($key.Type $key.CamelAlias)
		{
			return ${table.Alias}Dao.Get${table.Alias}($key.CamelAlias);
		}
		
		/// <summary>
		/// 获取$table.Description集合
		/// </summary>
		/// <param name="${table.CamelAlias}Qp">$table.Description</param>
		/// <returns>$table.Description集合</returns>
		public IList<$table.Alias> Get${table.Alias}s(${table.Alias}QP ${table.CamelAlias}Qp)
		{
			return ${table.Alias}Dao.Get${table.Alias}s(${table.CamelAlias}Qp);
		}

		/// <summary>
		/// 获取指定查询条件下$table.Description集合的记录数
		/// </summary>
		/// <param name="${table.CamelAlias}Qp">$table.Description</param>
		/// <returns>$table.Description集合</returns>
		public int Get${table.Alias}sCount(${table.Alias}QP ${table.CamelAlias}Qp)
		{
			return ${table.Alias}Dao.Get${table.Alias}sCount(${table.CamelAlias}Qp);
		}
		
		/// <summary>
		/// 有否$table.Description
		/// </summary>
		/// <param name="$key.CamelAlias">$key.Description</param>
		/// <returns>结果</returns>
		public bool Has${table.Alias}($key.Type $key.CamelAlias)
		{
			return ${table.Alias}Dao.Has${table.Alias}($key.CamelAlias);
		}

		/// <summary>
		/// 插入$table.Description
		/// </summary>
		/// <param name="$table.CamelAlias">$table.Description</param>
		/// <returns>结果</returns>
		public int Insert${table.Alias}($table.Alias $table.CamelAlias)
		{
			return ${table.Alias}Dao.Insert${table.Alias}($table.CamelAlias);
		}

		///<summary>
		///删除$table.Description
		///</summary>
		///<param name="$key.CamelAlias">$key.Description</param>
		///<returns>结果</returns>
		public bool Remove${table.Alias}($key.Type $key.CamelAlias)
		{
			return ${table.Alias}Dao.Remove${table.Alias}($key.CamelAlias);
		}
	
		/// <summary>
		/// 更新$table.Description
		/// </summary>
		/// <param name="${table.CamelAlias}Qp">$table.Description</param>
		/// <returns>结果</returns>
		public bool Update${table.Alias}(${table.Alias}QP ${table.CamelAlias}Qp)
		{
			return ${table.Alias}Dao.Update${table.Alias}(${table.CamelAlias}Qp);
		}

		/// <summary>
		/// 批量删除$table.Description集合
		/// </summary>
		/// <param name="${key.CamelAlias}s">${key.Description}集合</param>
		/// <returns>结果</returns>
		public bool Remove${table.Alias}s(IList<$key.Type> ${key.CamelAlias}s)
		{
			bool result = true;
            using (IDalSession session = ${table.Alias}Dao.Writer.BeginTransaction())
            {
                foreach (int ${key.CamelAlias} in ${key.CamelAlias}s)
                {
                    result = ${table.Alias}Dao.Remove${table.Alias}(${key.CamelAlias});
                }
                session.Complete();
            }
            return result;
		}

		#endregion
	}
}
